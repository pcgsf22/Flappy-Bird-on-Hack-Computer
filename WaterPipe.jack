//Weijia Dengï¼ŒProject 09,Nand to Tetris
/** Implements the water pipes. */
class WaterPipe{
    static Array pipeHead;
    static Array pipeBody;
    static int posInfo;
    //to sentinel the order of Arrays representing the pipes.
    //0: pipe[0],pipe[1],pipe[2]
    //1: pipe[1],pipe[2],pipe[0];
    //2: pipe[2],pipe[0],pipe[1];
    static int xMutate;
    //to sentinel how many pixels has moved within 16bit
    field int upperHeight;
    //upper pipeBody length
    field int spiltLenth;
    //the hole length
    field int downHeight;
    //lower pipeBody length
    field int posX;
    //real X coordinate divide  16
    static int tempAddress;
    //save the address to avoid multiplication
    //field int realX;
    //real X coordinate,use to tell whether the bird has collided with a pipe.Not used for performance issue,use a slack method instead. 


    /** The constructor. Input the height of the upper pipe, the length of the split, and the x coordinate divided by 16 */
    constructor WaterPipe new(int h,int l,int x){
        let upperHeight=h;
        let spiltLenth=l;
        let downHeight=202-h-l;
        let posX=x;
   //     let realX=x*16;
        return this;
    }
    /** Initialize the WaterPipe class */
    function void init(){
        do WaterPipe.headInit();
        do WaterPipe.bodyInit();
        let posInfo=0;
        let xMutate=0;
        return;

    }
    /** Recycles static arrays */
    function void deAllocAll(){
        do Memory.deAlloc(pipeHead);
        do Memory.deAlloc(pipeBody);
        return;
    }
    /** Destructor */
    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
    /** Set the detail information of the waterpipe */
    method void setPos(int h,int l,int x){
        // h: height of the upper pipe
        // l: the length of the split
        // x: the x coordinate divided by 16 */
        let upperHeight=h;
        let spiltLenth=l;
        let downHeight=202-h-l;
        let posX=x;
        do WaterPipe.deAllocAll();
        do WaterPipe.headInit();
        do WaterPipe.bodyInit();
        let posInfo=0;
        let xMutate=0;
        return;

    }

    /** Load the head image*/
    function void headInit(){
		var Array current;            
        let pipeHead=Array.new(15); 
        let pipeHead[0]=Array.new(3);
		let current=pipeHead[0];
		let current[0]=-2;
		let current[1]=16383;
		let current[2]=0;
		let pipeHead[1]=Array.new(3);
		let current=pipeHead[1];
		let current[0]=-2;
		let current[1]=16383;
		let current[2]=0;
		let pipeHead[2]=Array.new(3);
		let current=pipeHead[2];
		let current[0]=6;
		let current[1]=8192;
		let current[2]=0;
		let pipeHead[3]=Array.new(3);
		let current=pipeHead[3];
		let current[0]=110;
		let current[1]=8192;
		let current[2]=0;
		let pipeHead[4]=Array.new(3);
		let current=pipeHead[4];
		let current[0]=110;
		let current[1]=8192;
		let current[2]=0;
		let pipeHead[5]=Array.new(3);
		let current=pipeHead[5];
		let current[0]=110;
		let current[1]=8192;
		let current[2]=0;
		let pipeHead[6]=Array.new(3);
		let current=pipeHead[6];
		let current[0]=110;
		let current[1]=8192;
		let current[2]=0;
		let pipeHead[7]=Array.new(3);
		let current=pipeHead[7];
		let current[0]=110;
		let current[1]=8192;
		let current[2]=0;
		let pipeHead[8]=Array.new(3);
		let current=pipeHead[8];
		let current[0]=110;
		let current[1]=8192;
		let current[2]=0;
		let pipeHead[9]=Array.new(3);
		let current=pipeHead[9];
		let current[0]=110;
		let current[1]=8192;
		let current[2]=0;
		let pipeHead[10]=Array.new(3);
		let current=pipeHead[10];
		let current[0]=110;
		let current[1]=8192;
		let current[2]=0;
		let pipeHead[11]=Array.new(3);
		let current=pipeHead[11];
		let current[0]=110;
		let current[1]=12288;
		let current[2]=0;
		let pipeHead[12]=Array.new(3);
		let current=pipeHead[12];
		let current[0]=-2;
		let current[1]=16383;
		let current[2]=0;
		let pipeHead[13]=Array.new(3);
		let current=pipeHead[13];
		let current[0]=-2;
		let current[1]=16383;
		let current[2]=0;
		let pipeHead[14]=Array.new(3);
		let current=pipeHead[14];
		let current[0]=156;
		let current[1]=6144;
		let current[2]=0;
        return;
    }

    /** Load the body image*/
    function void bodyInit(){
        let pipeBody=Array.new(3);
        let pipeBody[0]=156;
		let pipeBody[1]=6144;
        let pipeBody[2]=0;
        return;
    }

    /** Modifys one line of image to show the effect of move one pixel right */
    function void arrayMoveRight(Array v){
        var int temp0,temp1,temp2;
            let temp2=1;
            if(v[2]>-1)
                {let temp2=0;}
            let v[2]=v[2]+v[2];
            let temp1=1;
            if(v[1]>-1)
                {let temp1=0;}
            let v[1]=v[1]+v[1];
              let temp0=1;
            if(v[0]>-1)
                {let temp0=0;}
            let v[0]=v[0]+v[0];
            let v[0]=v[0]+temp2;
            let v[1]=v[1]+temp0;
            let v[2]=v[2]+temp1;
            return;
        
    }

    /** Modifys the pipe image to show the effect of move one pixel right */
    function void globalMoveRight(){
        var int i;
        let xMutate=(xMutate+1)&15;
        if(xMutate=0){
            let posInfo=(posInfo+1)&3;
            //Means to %3,but % in Jack is expensive, use this instead.
            if(posInfo=3)
                {let posInfo=0;}
        }
        let i=0;
        while(i<15){
            do WaterPipe.arrayMoveRight(pipeHead[i]);
            let i=i+1;
        }
        do WaterPipe.arrayMoveRight(pipeBody);
        return;
    }

    /** Moves the coordinate of the pipe one pixel right*/
    method void moveRight(){
    //    let realX=realX+1;
        if(xMutate=0){
        //The pipe has moved a whole block.
            let posX=posX+1;
            if(posX>24){
            //The pipe has moved out of the valid display range.
            let posX=5;
            //Let the pipe goto the left to the valid display range.
            let upperHeight=Tools.random()/2;
            //Randomizes the height of the upper pipe.
            //random() is a function that generate random values between 0 and 255 
            let spiltLenth=50+(Tools.random()/10);
            //Randomizes the length of the split.
            let downHeight=202-upperHeight-spiltLenth;
            //Calculate the height of the lower pipe.
            //202=256-15(pipe Head lenght)-15-24(the height of ground)
            }
        }
        //if(realX>383)
       // {let realX=80;}
        return;
    }

    /** Draws a pair of pipe*/
    method void draw(){
        //Wrote in this dirty way to avoid one if-else clause per line of pixels.
        //The structure of this function is:
        //1. Determine whether the pipe is within the display range.
        //2. Determine how many blocks of the pipe is within the display range.
        //3. Determine the right order of blocks.
        //4. Draw the body of the upper pipe.
        //5. Draw the head of the upper pipe.
        //6. Draw the head of the lower pipe.
        //7. Draw the body of the lower pipe.
        var int i;
        let tempAddress=16384+posX;//address of the left-up block of the pipe.
        let i=0;
        if(posX>7){                                         
            //(7,24] is the valid display range.Numbers need to multiply by 16 to get the real x coordinate.  
            if(posX<22){                                    
                // All the three blocks are displayed.
                if(posInfo=0){
                    //Order [0],[1],[2].
                    while(i<upperHeight){
                        do WaterPipe.drawArray0(pipeBody);//The drawArray functions is used to draw a line of pipe.
                        let i=i+1;
                    }
                    let i=14;   //The upper head is down-up.
                    while(i>-1){
                        do WaterPipe.drawArray0(pipeHead[i]);
                        let i=i-1;
                    }
                    let i=0;
                    while(i<spiltLenth){
                        let i=i+1;
                        let tempAddress=tempAddress+32;
                    }
                    let i=0;    //The lower head is up-down.
                    while(i<15){
                        do WaterPipe.drawArray0(pipeHead[i]);
                        let i=i+1;
                    }
                    let i=0;
                    while(i<downHeight){
                        do WaterPipe.drawArray0(pipeBody);
                        let i=i+1;
                    }
                }
                else{
                    if(posInfo=1){
                        //Order [1],[2],[0]
                        //The following is the same as the previous one, except the calling drawArray function.
                        while(i<upperHeight){
                            do WaterPipe.drawArray1(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray1(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray1(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray1(pipeBody);
                            let i=i+1;
                        }
                    }
                    else{
                        //Order [2],[0],[1]
                        //The following is the same as the previous one, except the calling drawArray function.
                        while(i<upperHeight){
                            do WaterPipe.drawArray2(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray2(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray2(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray2(pipeBody);
                            let i=i+1;
                        }                        
                    }
                }
            }
            if(posX=22){
            //The left two blocks are displayed.
            //The following is the same as the previous one, except the calling drawArray function.
                if(posInfo=0){
                    while(i<upperHeight){
                        do WaterPipe.drawArray0R(pipeBody);
                        let i=i+1;
                    }
                    let i=14;
                    while(i>-1){
                        do WaterPipe.drawArray0R(pipeHead[i]);
                        let i=i-1;
                    }
                    let i=0;
                    while(i<spiltLenth){
                        let i=i+1;
                        let tempAddress=tempAddress+32;
                    }
                    let i=0;
                    while(i<15){
                        do WaterPipe.drawArray0R(pipeHead[i]);
                        let i=i+1;
                    }
                    let i=0;
                    while(i<downHeight){
                        do WaterPipe.drawArray0R(pipeBody);
                        let i=i+1;
                    }
                }
                else{
                    if(posInfo=1){
                        while(i<upperHeight){
                            do WaterPipe.drawArray1R(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray1R(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray1R(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray1R(pipeBody);
                            let i=i+1;
                        }
                    }
                    else{
                        while(i<upperHeight){
                            do WaterPipe.drawArray2R(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray2R(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray2R(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray2R(pipeBody);
                            let i=i+1;
                        }                        
                    }
                }
            }
            if(posX=23){
            //Only the leftest  block is displayed.
            //The following is the same as the previous one, except the calling drawArray function.
                if(posInfo=0){
                    while(i<upperHeight){
                        do WaterPipe.drawArray0RR(pipeBody);
                        let i=i+1;
                    }
                    let i=14;
                    while(i>-1){
                        do WaterPipe.drawArray0RR(pipeHead[i]);
                        let i=i-1;
                    }
                    let i=0;
                    while(i<spiltLenth){
                        let i=i+1;
                        let tempAddress=tempAddress+32;
                    }
                    let i=0;
                    while(i<15){
                        do WaterPipe.drawArray0RR(pipeHead[i]);
                        let i=i+1;
                    }
                    let i=0;
                    while(i<downHeight){
                        do WaterPipe.drawArray0RR(pipeBody);
                        let i=i+1;
                    }
                }
                else{
                    if(posInfo=1){
                        while(i<upperHeight){
                            do WaterPipe.drawArray1RR(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray1RR(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray1RR(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray1RR(pipeBody);
                            let i=i+1;
                        }
                    }
                    else{
                        while(i<upperHeight){
                            do WaterPipe.drawArray2RR(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray2RR(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray2RR(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray2RR(pipeBody);
                            let i=i+1;
                        }                        
                    }

                }
            }
          
        }
        else{
            if(posX=7){
            //The right two blocks are displayed.
            //The following is the same as the previous one, except the calling drawArray function.
                  if(posInfo=0){
                    while(i<upperHeight){
                        do WaterPipe.drawArray0L(pipeBody);
                        let i=i+1;
                    }
                    let i=14;
                    while(i>-1){
                        do WaterPipe.drawArray0L(pipeHead[i]);
                        let i=i-1;
                    }
                    let i=0;
                    while(i<spiltLenth){
                        let i=i+1;
                        let tempAddress=tempAddress+32;
                    }
                    let i=0;
                    while(i<15){
                        do WaterPipe.drawArray0L(pipeHead[i]);
                        let i=i+1;
                    }
                    let i=0;
                    while(i<downHeight){
                        do WaterPipe.drawArray0L(pipeBody);
                        let i=i+1;
                    }
                }
                else{
                    if(posInfo=1){
                        while(i<upperHeight){
                            do WaterPipe.drawArray1L(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray1L(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray1L(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray1L(pipeBody);
                            let i=i+1;
                        }
                    }
                    else{
                        while(i<upperHeight){
                            do WaterPipe.drawArray2L(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray2L(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray2L(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray2L(pipeBody);
                            let i=i+1;
                        }                        
                    }
                }

            }
    
            if(posX=6){
            //Only the rightest  block is displayed.
            //The following is the same as the previous one, except the calling drawArray function.
                    if(posInfo=0){
                    while(i<upperHeight){
                        do WaterPipe.drawArray0LL(pipeBody);
                        let i=i+1;
                    }
                    let i=14;
                    while(i>-1){
                        do WaterPipe.drawArray0LL(pipeHead[i]);
                        let i=i-1;
                    }
                    let i=0;
                    while(i<spiltLenth){
                        let i=i+1;
                        let tempAddress=tempAddress+32;
                    }
                    let i=0;
                    while(i<15){
                        do WaterPipe.drawArray0LL(pipeHead[i]);
                        let i=i+1;
                    }
                    let i=0;
                    while(i<downHeight){
                        do WaterPipe.drawArray0LL(pipeBody);
                        let i=i+1;
                    }
                }
                else{
                    if(posInfo=1){
                        while(i<upperHeight){
                            do WaterPipe.drawArray1LL(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray1LL(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray1LL(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray1LL(pipeBody);
                            let i=i+1;
                        }
                    }
                    else{
                        while(i<upperHeight){
                            do WaterPipe.drawArray2LL(pipeBody);
                            let i=i+1;
                        }
                        let i=14;
                        while(i>-1){
                            do WaterPipe.drawArray2LL(pipeHead[i]);
                            let i=i-1;
                        }
                        let i=0;
                        while(i<spiltLenth){
                            let i=i+1;
                            let tempAddress=tempAddress+32;
                        }
                        let i=0;
                        while(i<15){
                            do WaterPipe.drawArray2LL(pipeHead[i]);
                            let i=i+1;
                        }
                        let i=0;
                        while(i<downHeight){
                            do WaterPipe.drawArray2LL(pipeBody);
                            let i=i+1;
                        }                        
                    }
                }

            }
        }
    
        return;
    }
        
    /** Draws all the blocks in order 0,1,2 */
    function void drawArray0(Array a){
        do Memory.poke(tempAddress,a[0]);
        do Memory.poke(tempAddress+1,a[1]);
        do Memory.poke(tempAddress+2,a[2]);
        let tempAddress=tempAddress+32;//Goto next line
        return;
    }
    /** Draws all the blocks in order 1,2,0 */
    function void drawArray1(Array a){
        do Memory.poke(tempAddress,a[1]);
        do Memory.poke(tempAddress+1,a[2]);
        do Memory.poke(tempAddress+2,a[0]);
        let tempAddress=tempAddress+32;
                return;

    
    }
    /** Draws all the blocks in order 2,0,1 */
    function void drawArray2(Array a){
        do Memory.poke(tempAddress,a[2]);
        do Memory.poke(tempAddress+1,a[0]);
        do Memory.poke(tempAddress+2,a[1]);
        let tempAddress=tempAddress+32;
                return;


    }
    /** Draws the left two blocks in order 0,1,2, here R means right corner */

      function void drawArray0R(Array a){
        do Memory.poke(tempAddress,a[0]);
        do Memory.poke(tempAddress+1,a[1]);
        let tempAddress=tempAddress+32;
        return;
    }
    /** Draws the left two blocks in order 1,2,0 */

    function void drawArray1R(Array a){
        do Memory.poke(tempAddress,a[1]);
        do Memory.poke(tempAddress+1,a[2]);
        let tempAddress=tempAddress+32;
                return;

    }

    /** Draws the left two blocks in order 2,0,1 */

    function void drawArray2R(Array a){
        do Memory.poke(tempAddress,a[2]);
        do Memory.poke(tempAddress+1,a[0]);
        let tempAddress=tempAddress+32;
                return;


    }
    /** Draws the leftest block in order 0,1,2 */

    function void drawArray0RR(Array a){
        do Memory.poke(tempAddress,a[0]);
        let tempAddress=tempAddress+32;
        return;
    }
    /** Draws the leftest block in order 1,2,0 */
    function void drawArray1RR(Array a){
        do Memory.poke(tempAddress,a[1]);
        let tempAddress=tempAddress+32;
        return;
    }
    /** Draws the leftest block in order 2,0,1 */
    function void drawArray2RR(Array a){
        do Memory.poke(tempAddress,a[2]);
        let tempAddress=tempAddress+32;
                return;


    }
    /** Draws the right two blocks in order 0,1,2, here L means left corner */
      function void drawArray0L(Array a){
        do Memory.poke(tempAddress+1,a[1]);
        do Memory.poke(tempAddress+2,a[2]);
        let tempAddress=tempAddress+32;
        return;
    }
    /** Draws the right two blocks in order 1,2,0 */

    function void drawArray1L(Array a){
        do Memory.poke(tempAddress+1,a[2]);
        do Memory.poke(tempAddress+2,a[0]);
        let tempAddress=tempAddress+32;
                return;

    
    }
    /** Draws the right two blocks in order 2,0,1 */
    function void drawArray2L(Array a){
        do Memory.poke(tempAddress+1,a[0]);
        do Memory.poke(tempAddress+2,a[1]);
        let tempAddress=tempAddress+32;
                return;


    }
    /** Draws the rightest block in order 0,1,2 */
      function void drawArray0LL(Array a){
        do Memory.poke(tempAddress+2,a[2]);
        let tempAddress=tempAddress+32;
        return;
    }
    /** Draws the rightest block in order 1,2,0 */
    function void drawArray1LL(Array a){
        do Memory.poke(tempAddress+2,a[0]);
        let tempAddress=tempAddress+32;
                return;

    
    }
    /** Draws the rightest block in order 2,0,1 */
    function void drawArray2LL(Array a){
        do Memory.poke(tempAddress+2,a[1]);
        let tempAddress=tempAddress+32;
                return;


    }
    /** Gets the x coordinate*/
    method int getPosX(){
        return posX;
    }
    /** Gets the height of the upper body*/
    method int getUpperHeight(){
        return upperHeight;
    }
    /** Gets the split length*/
    method int getSplit(){
        return spiltLenth;
    }

//    method int getRealX(){
//        return realX;
//    }

}